// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "04/23/2024 14:26:23"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Verilog1 (
	A,
	B,
	A_greater_than_B);
input 	[1:0] A;
input 	[1:0] B;
output 	A_greater_than_B;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \A_greater_than_B~output_o ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \or0~0_combout ;


cyclonev_io_obuf \A_greater_than_B~output (
	.i(\or0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_greater_than_B~output_o ),
	.obar());
// synopsys translate_off
defparam \A_greater_than_B~output .bus_hold = "false";
defparam \A_greater_than_B~output .open_drain_output = "false";
defparam \A_greater_than_B~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \or0~0 (
// Equation(s):
// \or0~0_combout  = (!\A[1]~input_o  & (!\B[1]~input_o  & (\A[0]~input_o  & !\B[0]~input_o ))) # (\A[1]~input_o  & ((!\B[1]~input_o ) # ((\A[0]~input_o  & !\B[0]~input_o ))))

	.dataa(!\A[1]~input_o ),
	.datab(!\B[1]~input_o ),
	.datac(!\A[0]~input_o ),
	.datad(!\B[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\or0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \or0~0 .extended_lut = "off";
defparam \or0~0 .lut_mask = 64'h4D444D444D444D44;
defparam \or0~0 .shared_arith = "off";
// synopsys translate_on

assign A_greater_than_B = \A_greater_than_B~output_o ;

endmodule
