// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/13/2024 09:56:20"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Assignment5
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Assignment5_vlg_vec_tst();
// constants                                           
// general purpose registers
reg HNhi_CLOCK;
reg [7:0] HNhi_Data_In;
reg [2:0] HNhi_RegA_Id;
reg [2:0] HNhi_RegB_Id;
reg [2:0] HNhi_RegC_Id;
reg HNhi_WREN;
// wires                                               
wire [7:0] HNhi_RegA_8;
wire [7:0] HNhi_RegB_8;

// assign statements (if any)                          
Assignment5 i1 (
// port map - connection between master ports and signals/registers   
	.HNhi_CLOCK(HNhi_CLOCK),
	.HNhi_Data_In(HNhi_Data_In),
	.HNhi_RegA_8(HNhi_RegA_8),
	.HNhi_RegA_Id(HNhi_RegA_Id),
	.HNhi_RegB_8(HNhi_RegB_8),
	.HNhi_RegB_Id(HNhi_RegB_Id),
	.HNhi_RegC_Id(HNhi_RegC_Id),
	.HNhi_WREN(HNhi_WREN)
);
initial 
begin 
#200000 $finish;
end 

// HNhi_CLOCK
always
begin
	HNhi_CLOCK = 1'b0;
	HNhi_CLOCK = #12500 1'b1;
	#12500;
end 

// HNhi_WREN
initial
begin
	HNhi_WREN = 1'b1;
	HNhi_WREN = #80000 1'b0;
end 
// HNhi_Data_In[ 7 ]
initial
begin
	HNhi_Data_In[7] = 1'b0;
end 
// HNhi_Data_In[ 6 ]
initial
begin
	HNhi_Data_In[6] = 1'b0;
end 
// HNhi_Data_In[ 5 ]
initial
begin
	HNhi_Data_In[5] = 1'b0;
end 
// HNhi_Data_In[ 4 ]
initial
begin
	HNhi_Data_In[4] = 1'b1;
	HNhi_Data_In[4] = #80000 1'b0;
end 
// HNhi_Data_In[ 3 ]
initial
begin
	HNhi_Data_In[3] = 1'b0;
end 
// HNhi_Data_In[ 2 ]
initial
begin
	HNhi_Data_In[2] = 1'b0;
end 
// HNhi_Data_In[ 1 ]
initial
begin
	HNhi_Data_In[1] = 1'b0;
	HNhi_Data_In[1] = #60000 1'b1;
	HNhi_Data_In[1] = #20000 1'b0;
end 
// HNhi_Data_In[ 0 ]
initial
begin
	HNhi_Data_In[0] = 1'b0;
	HNhi_Data_In[0] = #30000 1'b1;
	HNhi_Data_In[0] = #30000 1'b0;
end 
// HNhi_RegA_Id[ 2 ]
initial
begin
	HNhi_RegA_Id[2] = 1'b0;
end 
// HNhi_RegA_Id[ 1 ]
initial
begin
	HNhi_RegA_Id[1] = 1'b0;
	HNhi_RegA_Id[1] = #130000 1'b1;
	HNhi_RegA_Id[1] = #50000 1'b0;
end 
// HNhi_RegA_Id[ 0 ]
initial
begin
	HNhi_RegA_Id[0] = 1'b0;
	HNhi_RegA_Id[0] = #100000 1'b1;
	HNhi_RegA_Id[0] = #30000 1'b0;
	HNhi_RegA_Id[0] = #30000 1'b1;
	HNhi_RegA_Id[0] = #20000 1'b0;
end 
// HNhi_RegB_Id[ 2 ]
initial
begin
	HNhi_RegB_Id[2] = 1'b0;
end 
// HNhi_RegB_Id[ 1 ]
initial
begin
	HNhi_RegB_Id[1] = 1'b0;
end 
// HNhi_RegB_Id[ 0 ]
initial
begin
	HNhi_RegB_Id[0] = 1'b0;
end 
// HNhi_RegC_Id[ 2 ]
initial
begin
	HNhi_RegC_Id[2] = 1'b0;
end 
// HNhi_RegC_Id[ 1 ]
initial
begin
	HNhi_RegC_Id[1] = 1'b0;
	HNhi_RegC_Id[1] = #30000 1'b1;
	HNhi_RegC_Id[1] = #50000 1'b0;
end 
// HNhi_RegC_Id[ 0 ]
initial
begin
	HNhi_RegC_Id[0] = 1'b1;
	HNhi_RegC_Id[0] = #30000 1'b0;
	HNhi_RegC_Id[0] = #30000 1'b1;
	HNhi_RegC_Id[0] = #20000 1'b0;
end 
endmodule

